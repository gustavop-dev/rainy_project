# Generated by Django 5.2.1 on 2025-06-03 21:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono')),
                ('email', models.EmailField(max_length=254, verbose_name='Correo Electrónico')),
                ('message', models.TextField(verbose_name='Mensaje')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
            ],
            options={
                'verbose_name': 'Contacto',
                'verbose_name_plural': 'Formularios de Contacto',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Ej: Rainy FL 80', max_length=255, verbose_name='Título del Producto')),
                ('slug', models.SlugField(blank=True, help_text='Versión amigable del título para URLs, se genera automáticamente si se deja vacío.', max_length=255, unique=True, verbose_name='Slug (URL amigable)')),
                ('initial_text', models.TextField(blank=True, help_text='Un texto introductorio o destacado para el producto.', null=True, verbose_name='Texto Inicial')),
                ('description', models.TextField(help_text='Descripción completa del producto.', verbose_name='Descripción Detallada')),
                ('price', models.DecimalField(decimal_places=2, help_text='Precio del producto.', max_digits=10, verbose_name='Precio')),
                ('main_image', models.ImageField(help_text='Imagen que muestra el producto y sus dimensiones.', upload_to='products/main_images/', verbose_name='Imagen Principal del Producto')),
                ('order', models.PositiveIntegerField(default=0, help_text='Número para ordenar los productos (menor primero).', verbose_name='Orden de Visualización')),
                ('is_active', models.BooleanField(default=True, help_text='Desmarcar para ocultar el producto del sitio web.', verbose_name='¿Está Activo?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ProductSeriesComparisonImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Un nombre descriptivo para la imagen, ej: Comparativa Dimensiones Serie Rainy FL', max_length=255, verbose_name='Nombre de la Imagen Comparativa')),
                ('image', models.ImageField(help_text='Imagen que muestra la comparativa de varios productos de la serie.', upload_to='products/comparison_images/', verbose_name='Imagen Comparativa')),
                ('is_active', models.BooleanField(default=True, help_text='Desmarcar para ocultar esta imagen del sitio.', verbose_name='¿Está Activa?')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Subida')),
            ],
            options={
                'verbose_name': 'Imagen Comparativa de Serie de Productos',
                'verbose_name_plural': 'Imágenes Comparativas de Series de Productos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SpecificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ej: Área máxima de la cubierta, Intensidad máxima de lluvia', max_length=255, unique=True, verbose_name='Nombre de la Especificación')),
                ('description', models.TextField(blank=True, help_text='Descripción adicional para el tipo de especificación (visible en admin).', null=True, verbose_name='Descripción (Opcional)')),
                ('unit', models.CharField(blank=True, help_text='Ej: m2, mm/h, L/min. Dejar en blanco si no aplica.', max_length=50, null=True, verbose_name='Unidad de Medida (Opcional)')),
            ],
            options={
                'verbose_name': 'Tipo de Especificación de Producto',
                'verbose_name_plural': 'Tipos de Especificaciones de Producto',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Valor específico para el producto y tipo de especificación. Ej: 120 m2, 75 mm/h, Abierto por un extremo...', max_length=255, verbose_name='Valor de la Especificación')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specifications', to='website.product', verbose_name='Producto')),
                ('specification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.specificationtype', verbose_name='Tipo de Especificación')),
            ],
            options={
                'verbose_name': 'Especificación de Producto',
                'verbose_name_plural': 'Especificaciones de Productos',
                'ordering': ['product', 'specification_type__name'],
                'unique_together': {('product', 'specification_type')},
            },
        ),
    ]
